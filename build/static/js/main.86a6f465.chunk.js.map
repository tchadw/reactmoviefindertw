{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","SearchBar","state","value","timeout","doSearch","event","_this","setState","target","clearTimeout","setTimeout","props","callback","lib_default","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","_ref","image","movieId","movieName","clickable","pathname","concat","LoadMoreBtn","onClick","text","Spinner","Home","movies","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","Object","toConsumableArray","results","heroImage","page","total_pages","localStorage","setItem","JSON","stringify","getItem","parse","objectSpread","_this$state","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","id","original_title","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Navigation","movie","MovieInfo","style","background","backdrop_path","title","overview","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","catch","error","console","elements_Navigation_Navigation","location","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_Actor_Actor","NotFound","App","BrowserRouter","Fragment","elements_Header_Header","Switch","Route","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.86a6f465.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"rmdb-header\">\n      <div className=\"rmdb-header-content\">\n        <Link to=\"/\">\n          <img\n            src=\"./images/react_movie.png\"\n            alt=\"rmdb-logo\"\n            className=\"rmdb-logo\"\n          />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"98d4afcbb1ab6e5d6e785399b2e67b45\";\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w500\";\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import React, { Component } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends Component {\n  state = {\n    value: \"\"\n  };\n\n  timeout = null;\n\n  doSearch = event => {\n    this.setState({ value: event.target.value });\n    clearTimeout(this.timeout);\n\n    this.timeout = setTimeout(() => {\n      this.props.callback(this.state.value);\n    }, 500);\n  };\n\n  render() {\n    return (\n      <div className=\"rmdb-searchbar\">\n        <div className=\"rmdb-searchbar-content\">\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n          <input\n            type=\"text\"\n            className=\"rmdb-searchbar-input\"\n            placeholder=\"Find A Movie\"\n            onChange={this.doSearch}\n            value={this.state.value}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default SearchBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./FourColGrid.css\";\n\nconst FourColGrid = props => {\n  const renderElements = () => {\n    const gridElements = props.children.map((element, i) => {\n      return (\n        <div key={i} className=\"rmdb-grid-element\">\n          {element}\n        </div>\n      );\n    });\n    return gridElements;\n  };\n\n  return (\n    <div className=\"rmdb-grid\">\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\n      <div className=\"rmdb-grid-content\">{renderElements()}</div>\n    </div>\n  );\n};\n\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool\n};\n\nexport default FourColGrid;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./MovieThumb.css\";\n\nconst MovieThumb = ({ image, movieId, movieName, clickable }) => {\n  return (\n    <div className=\"rmdb-moviethumb\">\n      {clickable ? (\n        <Link\n          to={{\n            pathname: `/${movieId}`,\n            movieName: `${movieName}`\n          }}\n        >\n          <img src={image} alt=\"moviethumb\" />\n        </Link>\n      ) : (\n        <img src={image} alt=\"moviethumb\" />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string\n};\n\nexport default MovieThumb;\n","import React from \"react\";\nimport \"./LoadMoreBtn.css\";\n\nconst LoadMoreBtn = props => {\n  return (\n    <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\n      <p>{props.text}</p>\n    </div>\n  );\n};\nexport default LoadMoreBtn;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return <div className=\"loader\" />;\n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Home.css\";\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: \"\"\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"HomeState\")) {\n      const state = JSON.parse(localStorage.getItem(\"HomeState\"));\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  searchItems = searchTerm => {\n    let endpoint = \"\";\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm: searchTerm\n    });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  loadMoreItems = () => {\n    let endpoint = \"\";\n    this.setState({ loading: true });\n\n    if (this.state.searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\n        .state.currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${\n        this.state.searchTerm\n      }&page=${this.state.currentPage + 1}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  fetchItems = endpoint => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        this.setState(\n          {\n            movies: [...this.state.movies, ...result.results],\n            heroImage: this.state.heroImage || result.results[0],\n            loading: false,\n            currentPage: result.page,\n            totalPages: result.total_pages\n          },\n          () => {\n            if (this.state.searchTerm === \"\") {\n              localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\n            }\n          }\n        );\n      });\n  };\n\n  render() {\n    const {\n      movies,\n      heroImage,\n      loading,\n      currentPage,\n      totalPages,\n      searchTerm\n    } = this.state;\n\n    return (\n      <div className=\"rmdb-home\">\n        <div>\n          <SearchBar callback={this.searchItems} />\n        </div>\n\n        <div className=\"rmdb-home-grid\">\n          <FourColGrid\n            header={this.state.searchTerm ? \"Search Result\" : \"Popular Movies\"}\n            loading={this.state.loading}\n          >\n            {this.state.movies.map((element, i) => {\n              return (\n                <MovieThumb\n                  key={i}\n                  clickable={true}\n                  image={\n                    element.poster_path\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\n                      : \"./images/no_image.jpg\"\n                  }\n                  movieId={element.id}\n                  movieName={element.original_title}\n                />\n              );\n            })}\n          </FourColGrid>\n          {this.state.loading ? <Spinner /> : null}\n          {this.state.currentPage <= this.state.totalPages &&\n          !this.state.loading ? (\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nconst Navigation = props => {\n  return (\n    <div className=\"rmdb-navigation\">\n      <div className=\"rmdb-navigation-content\">\n        <Link to=\"/\">\n          <p>Home</p>\n          <p>/</p>\n          <p>{props.movie}</p>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\nimport FontAwesome from \"react-fontawesome\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport \"./MovieInfo.css\";\n\nconst MovieInfo = props => {\n  return (\n    <div\n      className=\"rmdb-movieinfo\"\n      style={{\n        background: props.movie.backdrop_path\n          ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n              props.movie.backdrop_path\n            }')`\n          : \"#000\"\n      }}\n    >\n      <div className=\"rmdb-movieinfo-content\">\n        <div className=\"rmdb-movieinfo-thumb\">\n          <MovieThumb\n            image={\n              props.movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\n                : \"./images/no_image.jpg \"\n            }\n            clickable={false}\n          />\n          <div className=\"rmdb-movieinfo-text\">\n            <h1>{props.movie.title}</h1>\n            <h3>PLOT</h3>\n            <p>{props.movie.overview}</p>\n            <h3>IMDB RATING</h3>\n            <div className=\"rmdb-rating\">\n              <meter\n                min=\"0\"\n                max=\"100\"\n                optimum=\"100\"\n                low=\"40\"\n                high=\"70\"\n                value={props.movie.vote_average * 10}\n              />\n              <p className=\"rmdb-score\">{props.movie.vote_average}</p>\n            </div>\n            {props.directors.length > 1 ? (\n              <h3>DIRECTORS</h3>\n            ) : (\n              <h3>DIRECTOR</h3>\n            )}\n            {props.directors.map((element, i) => {\n              return (\n                <p key={i} className=\"rmdb-director\">\n                  {element.name}\n                </p>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport { calcTime, convertMoney } from \"../../../helpers\";\nimport \"./MovieInfoBar.css\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from \"../../../config\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\n\nconst MovieInfoBar = props => {\n  return (\n    <div className=\"rmdb-movieinfobar\">\n      <div className=\"rmdb-movieinfobar-content\">\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n          <span className=\"rmdb-movieinfobar-info\">\n            Running Time: {calcTime(props.time)}\n          </span>\n        </div>\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n          <span className=\"rmdb-movieinfobar-info\">\n            Budget: {convertMoney(props.budget)}\n          </span>\n        </div>\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n          <span className=\"rmdb-movieinfobar-info\">\n            Revenue: {convertMoney(props.revenue)}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfoBar;\n","import React from \"react\";\nimport { IMAGE_BASE_URL } from \"../../../config\";\nimport \"./Actor.css\";\n\nconst Actor = props => {\n  const POSTER_SIZE = \"w154\";\n\n  return (\n    <div className=\"rmdb-actor\">\n      <img\n        src={\n          props.actor.profile_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\n            : \"./images/no_image.jpg\"\n        }\n        alt=\"actorthumb\"\n      />\n\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\n      <span className=\"rmdb-actor-character\">{props.actor.character}</span>\n    </div>\n  );\n};\n\nexport default Actor;\n","import React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport Navigation from \"../elements/Navigation/Navigation\";\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport Actor from \"../elements/Actor/Actor\";\nimport Spinner from \"../elements/Spinner/Spinner\";\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\n      const state = JSON.parse(\n        localStorage.getItem(`${this.props.match.params.movieId}`)\n      );\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      //First fetch movie ...\n      const endpoint = `${API_URL}movie/${\n        this.props.match.params.movieId\n      }?api_key=${API_KEY}&language=en-US`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  fetchItems = endpoint => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        // Catches any empty results\n        if (result.status_code) {\n          this.setState({ loading: false });\n        } else {\n          this.setState({ movie: result }, () => {\n            // fetch actors in the setState callback function\n            const endpoint = `${API_URL}movie/${\n              this.props.match.params.movieId\n            }/credits?api_key=${API_KEY}`;\n            fetch(endpoint)\n              .then(result => result.json())\n              .then(result => {\n                const directors = result.crew.filter(\n                  member => member.job === \"Director\"\n                );\n\n                this.setState(\n                  {\n                    actors: result.cast,\n                    directors,\n                    loading: false\n                  },\n                  () => {\n                    localStorage.setItem(\n                      `${this.props.match.params.movieId}`,\n                      JSON.stringify(this.state)\n                    );\n                  }\n                );\n              });\n          });\n        }\n      })\n      .catch(error => console.error(\"Error\", error));\n  };\n\n  render() {\n    return (\n      <div className=\"rmdb-movie\">\n        {this.state.movie ? (\n          <div>\n            <Navigation movie={this.props.location.movieName} />\n            <MovieInfo\n              movie={this.state.movie}\n              directors={this.state.directors}\n            />\n            <MovieInfoBar\n              time={this.state.movie.runtime}\n              budget={this.state.movie.budget}\n              revenue={this.state.revenue}\n            />\n          </div>\n        ) : null}\n        {this.state.actors ? (\n          <div className=\"rmdb-movie-grid\">\n            <FourColGrid header={\"Actors\"}>\n              {this.state.actors.map((element, i) => {\n                return <Actor key={i} actor={element} />;\n              })}\n            </FourColGrid>\n          </div>\n        ) : null}\n        {!this.state.actors && !this.state.loading ? (\n          <h1>No Movie Found!</h1>\n        ) : null}\n        {this.state.loading ? <Spinner /> : null}}\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>Uh Oh... This Page Does Not Exist</h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"../elements/Header/Header\";\nimport Home from \"../Home/Home\";\nimport Movie from \"../Movie/Movie\";\nimport NotFound from \"../elements/NotFound/NotFound\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/:movieId\" component={Movie} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}